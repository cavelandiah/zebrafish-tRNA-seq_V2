configfile: "config/config.yaml"

# Changes on Apr 6:
# We build a combined approach, were calculated the references using the expression patterns of
# this experiment and then we incorporated those references with annotated Inosines at position 34.
import pandas as pd

samples_df = pd.read_csv(config["samples_tsv"], sep="\s+")
sample_name_dict = samples_df.drop_duplicates(subset='timepoint').set_index('timepoint').to_dict(orient="index")
SAMPLES = samples_df["fastq"].to_list()
no_bs_df = samples_df[samples_df["treatment"] != "BS"]
no_bs_samples = no_bs_df["fastq"].to_list()
bs_samples_df = samples_df[samples_df["treatment"] == "BS"]
BS_SAMPLES = bs_samples_df["fastq"].to_list()
dm_samples_df = samples_df[samples_df["treatment"] == "DM"]
dm_samples = dm_samples_df["fastq"].to_list()
mock_samples_df = samples_df[samples_df["treatment"] == "DM"]
mock_samples = dm_samples_df["fastq"].to_list()
samples_df.set_index("fastq", inplace=True)
sample_dict = samples_df.to_dict(orient="index")
samples_per_treatment = {'DM': dm_samples, 'MOCK': mock_samples, 'BS': BS_SAMPLES }

wildcard_constraints:
    #sample="[A-Za-z0-9_]+",
    # This was modified to specific zebrafish experiment
    sample="(Mn|Z[1-9])_i[3-8]",
    treatment = "[A-Z]+",
    c_treatment = "[A-Z]+",
    m_cutoff ="[0-9]+", #         m_cutoff="\d+",
    e_cutoff ="[0-9]",
    min_cov = "[0-9]+",
    dist = "[0-5]",
    mismatch_type = "[A-Za-z5]+",
    polyT = "[A-Za-z]+",
    reads_filter = "[noneumi]+",
    ref_set = "[manulsectd]+",

# ploting paramters
CM = 1 / 2.54
font = {"family": "normal", "weight": "normal", "size": 7}

# utility functions
def anticodonfamily_from_rname(rname):
    """Get anticodon family from fasta header of reference.

    Needs to be adjusted to naming scheme of reference fasta file.
    """
    aa = rname.split("(")[1].strip(")")
    aa = aa.replace(")[N]", "")
    aa = aa.replace(")[B]", "")
    aa = aa.replace(")[H]", "")
    return aa

# rules

# include: "rules/utils.smk"
include: "rules/ref_genome.smk"
include: "rules/alignments.smk"
include: "rules/preprocessing_reads.smk"
include: "rules/mapping.smk"
include: "rules/filter_mappings.smk"
include: "rules/filter_mapping_manual.smk"
include: "rules/multimappers.smk"
include: "rules/clustering.smk"
include: "rules/abundance_plots.smk"
include: "rules/coverage.smk"
include: "rules/coverage_plots.smk"
include: "rules/modifications.smk"
include: "rules/abundance.smk"
include: "rules/abundance_pca.smk"
include: 'rules/duplication_rate.smk'
include: "rules/qc.smk"


rule run_all:
    input:
        # Running this with -c4 is demanding for server: too many download request
        'resources/references/all_refs.fa', #CAVH
        'resources/references/selected_refs.fa', #CAVH
        'resources/references/alignment/'+config['ref_set']+'_tRNAs.fa_sorted.fa',
        'resources/references/alignment/'+config['ref_set']+'_tRNAs.fa',
        'qc/cluster/'+config['ref_set']+'/editdist_hist.pdf',
        expand('qc/fastqc/raw_{sample}.json', sample=SAMPLES),
        expand('resources/filteres-reads/a_{sample}.fastq', sample=SAMPLES),
        expand('qc/fastqc/a_u_t_q_{sample}.html', sample=SAMPLES),
        'qc/preprocessing_summary/preproccessing.pdf',
        'qc/mapping-summary/mapping-'+config['ref_set']+'.pdf',
        'qc/umi/'+config['ref_set']+'_duplication_rate.pdf',
        'qc/cluster/pre-filter_'+config['reads_filter']+'/'+config['ref_set']+'/dist_multimapper.pdf',
        'results/abundance/'+config['reads_filter']+'_'+config['ref_set']+'_pca-done.txt',
        ###'results/abundance/umi_selected_pca-done.txt',
        'results/modifications/get_DM_all_plots',
        #'results/modifications/get_MOCK_all_plots',
        ###'results/modifications/get_BS_all_plots',
        ###'results/modifications/get_all_m5C_calls_plots',
        #'results/multimappers/pre-filter_'+config['reads_filter']+'/'+config['ref_set']+'/cluster-editdist-ed-3-mm-50_DM_multimappers_between_clusters_DM.pdf',
        ###'results/multimappers/pre-filter_'+config['reads_filter']+'/'+config['ref_set']+'/cluster-editdist-ed-2-mm-50_DM_multimappers_between_clusters_DM.pdf',
        #'results/multimappers/pre-filter_'+config['reads_filter']+'/'+config['ref_set']+'/cluster-editdist-ed-3-mm-50_DM_multimappers_between_clusters_MOCK.pdf',
        ###'results/multimappers/pre-filter_'+config['reads_filter']+'/'+config['ref_set']+'/cluster-editdist-ed-3-mm-50_DM_multimappers_between_clusters_BS.pdf',
        #'results/multimappers/pre-filter_'+config['reads_filter']+'/'+config['ref_set']+'/cluster-editdist-3_multimappers_between_clusters_DM.pdf',
        #'results/multimappers/pre-filter_'+config['reads_filter']+'/'+config['ref_set']+'/cluster-editdist-2_multimappers_between_clusters_DM.pdf',
        #'results/multimappers/pre-filter_'+config['reads_filter']+'/'+config['ref_set']+'/cluster-editdist-1_multimappers_between_clusters_DM.pdf',
        #'results/multimappers/pre-filter_'+config['reads_filter']+'/'+config['ref_set']+'/cluster-editdist-3_multimappers_between_clusters_MOCK.pdf',
        ###'results/multimappers/pre-filter_'+config['reads_filter']+'/'+config['ref_set']+'/cluster-editdist-3_multimappers_between_clusters_BS.pdf',
        #'results/multimappers/pre-filter_'+config['reads_filter']+'/'+config['ref_set']+'/multimapper_between_refs.pdf',
        #'results/coverage_plots/done.txt',
        #'results/abundance/done.txt',
    #output:
        #'results/all.txt'
    #run:
        #with open(str(output),'w') as file:
            #for f in input:
                #file.write(f+'\n')
